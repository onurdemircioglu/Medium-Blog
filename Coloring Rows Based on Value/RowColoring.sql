-- PREPARING DATA
DROP TABLE COLOR_TABLE;
CREATE TABLE COLOR_TABLE AS 
(
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 1 AS REPORT_ORDER_NUM, 9807 AS GROUP_CODE, 100 AS CUSTOMER_NUM, 469971 AS TOTAL_RISK, 1375398 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 2 AS REPORT_ORDER_NUM, 9807 AS GROUP_CODE, 101 AS CUSTOMER_NUM, 468144 AS TOTAL_RISK, 1375398 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 3 AS REPORT_ORDER_NUM, 9807 AS GROUP_CODE, 102 AS CUSTOMER_NUM, 437283 AS TOTAL_RISK, 1375398 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL

SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 4 AS REPORT_ORDER_NUM, 5112 AS GROUP_CODE, 103 AS CUSTOMER_NUM, 482376 AS TOTAL_RISK, 1111107 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 5 AS REPORT_ORDER_NUM, 5112 AS GROUP_CODE, 104 AS CUSTOMER_NUM, 304673 AS TOTAL_RISK, 1111107 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 6 AS REPORT_ORDER_NUM, 5112 AS GROUP_CODE, 105 AS CUSTOMER_NUM, 168493 AS TOTAL_RISK, 1111107 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 7 AS REPORT_ORDER_NUM, 5112 AS GROUP_CODE, 106 AS CUSTOMER_NUM, 155565 AS TOTAL_RISK, 1111107 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL

SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 8 AS REPORT_ORDER_NUM, 4218 AS GROUP_CODE, 107 AS CUSTOMER_NUM, 496548 AS TOTAL_RISK, 1102189 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 9 AS REPORT_ORDER_NUM, 4218 AS GROUP_CODE, 108 AS CUSTOMER_NUM, 249970 AS TOTAL_RISK, 1102189 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 10 AS REPORT_ORDER_NUM, 4218 AS GROUP_CODE, 109 AS CUSTOMER_NUM, 190132 AS TOTAL_RISK, 1102189 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 11 AS REPORT_ORDER_NUM, 4218 AS GROUP_CODE, 110 AS CUSTOMER_NUM, 111879 AS TOTAL_RISK, 1102189 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 12 AS REPORT_ORDER_NUM, 4218 AS GROUP_CODE, 111 AS CUSTOMER_NUM, 53660 AS TOTAL_RISK, 1102189 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL

SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 13 AS REPORT_ORDER_NUM, 12125 AS GROUP_CODE, 112 AS CUSTOMER_NUM, 397459 AS TOTAL_RISK, 914502 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 14 AS REPORT_ORDER_NUM, 12125 AS GROUP_CODE, 113 AS CUSTOMER_NUM, 378700 AS TOTAL_RISK, 914502 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 15 AS REPORT_ORDER_NUM, 12125 AS GROUP_CODE, 114 AS CUSTOMER_NUM, 138343 AS TOTAL_RISK, 914502 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL

SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 16 AS REPORT_ORDER_NUM, 9999 AS GROUP_CODE, 115 AS CUSTOMER_NUM, 495942 AS TOTAL_RISK, 704481 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 17 AS REPORT_ORDER_NUM, 9999 AS GROUP_CODE, 116 AS CUSTOMER_NUM, 163584 AS TOTAL_RISK, 704481 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 18 AS REPORT_ORDER_NUM, 9999 AS GROUP_CODE, 117 AS CUSTOMER_NUM, 44955 AS TOTAL_RISK, 704481 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL

SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 19 AS REPORT_ORDER_NUM, 0 AS GROUP_CODE, 118 AS CUSTOMER_NUM, 490780 AS TOTAL_RISK, 490780 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL

SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 20 AS REPORT_ORDER_NUM, 0 AS GROUP_CODE, 119 AS CUSTOMER_NUM, 464525 AS TOTAL_RISK, 464525 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL

SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 21 AS REPORT_ORDER_NUM, 2525 AS GROUP_CODE, 120 AS CUSTOMER_NUM, 429813 AS TOTAL_RISK, 429813 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL

SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 22 AS REPORT_ORDER_NUM, 0 AS GROUP_CODE, 121 AS CUSTOMER_NUM, 387009 AS TOTAL_RISK, 387009 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL

SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 23 AS REPORT_ORDER_NUM, 0 AS GROUP_CODE, 122 AS CUSTOMER_NUM, 376826 AS TOTAL_RISK, 376826 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL

SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 24 AS REPORT_ORDER_NUM, 1212 AS GROUP_CODE, 123 AS CUSTOMER_NUM, 232563 AS TOTAL_RISK, 351482 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 25 AS REPORT_ORDER_NUM, 1212 AS GROUP_CODE, 124 AS CUSTOMER_NUM, 118919 AS TOTAL_RISK, 351482 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL

SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 26 AS REPORT_ORDER_NUM, 0 AS GROUP_CODE, 125 AS CUSTOMER_NUM, 314721 AS TOTAL_RISK, 314721 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 27 AS REPORT_ORDER_NUM, 0 AS GROUP_CODE, 126 AS CUSTOMER_NUM, 302070 AS TOTAL_RISK, 302070 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 28 AS REPORT_ORDER_NUM, 0 AS GROUP_CODE, 127 AS CUSTOMER_NUM, 175575 AS TOTAL_RISK, 175575 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 29 AS REPORT_ORDER_NUM, 0 AS GROUP_CODE, 128 AS CUSTOMER_NUM, 159263 AS TOTAL_RISK, 159263 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL UNION ALL
SELECT TO_DATE('31032023', 'DDMMYYYY') AS REPORT_DATE, 30 AS REPORT_ORDER_NUM, 0 AS GROUP_CODE, 129 AS CUSTOMER_NUM, 43500 AS TOTAL_RISK, 43500 AS GROUP_RISK, CAST(NULL AS NUMBER) AS COLOR_FLG FROM DUAL
)
;
COMMIT;


SELECT *
FROM COLOR_TABLE
ORDER BY REPORT_ORDER_NUM
;




-- RESET SECTION
DECLARE
    V_REPORT_DATE DATE := TO_DATE('31032023','DDMMYYYY');
BEGIN

    UPDATE COLOR_TABLE
    SET COLOR_FLG = NULL
    WHERE 1=1
        AND REPORT_DATE = V_REPORT_DATE
    ;
    COMMIT;

	DBMS_OUTPUT.PUT_LINE('PROCESS COMPLETED');
END;
/




-- UPDATE SECTION (0 => WHITE, 1 => COLORED)
DECLARE
    V_REPORT_DATE DATE := TO_DATE('31032023','DDMMYYYY');
    V_MAX_ROW NUMBER;

BEGIN 
    SELECT MAX(REPORT_ORDER_NUM) INTO V_MAX_ROW -- IN ORDER TO FIND HOW MANY ROWS TO PROCESS
    FROM COLOR_TABLE
    WHERE 1=1
        AND REPORT_DATE = V_REPORT_DATE
    ;


	FOR MY_ROWS IN 1.. V_MAX_ROW LOOP
        -- EVERY PREVIOUS ROW'S COLOR_FLAG SHOULD BE UPDATED BEFORE CURRENT ROW'S COLOR_FLAG IS DETERMINED. BECAUSE CURRENT ROW'S COLOR IS DEPENDENT ON PREVIOUS ROW. THEREFORE IT REUQIRES A FOR LOOP.
        UPDATE COLOR_TABLE A
        SET A.COLOR_FLG =
        (
        SELECT CASE WHEN REPORT_ORDER_NUM = 1 THEN 0
                    WHEN PREV_GROUP_CODE = GROUP_CODE AND PREV_GROUP_CODE NOT IN (-9,0) AND GROUP_CODE NOT IN (-9,0) THEN PREV_COLOR_FLG -- CURRENT GROUP_CODE IS SAME AS PREVIOUS ROW GROUP_CODE AND BOTH ARE DIFFERENT THAN -9 (IS VALID AND SWITCHING BETWEEN SAME GROUPS, GROUP_CODE COLUMN CAN CONTAIN -9 WHICH MEANS NO DATA (NULL))
                    WHEN PREV_GROUP_CODE != GROUP_CODE AND PREV_GROUP_CODE NOT IN (-9,0) AND GROUP_CODE NOT IN (-9,0) THEN -- CURRENT GROUP_CODE IS DIFFERENT FROM PREVIOUS GROUP_CODE AND BOT BOTH ARE DIFFERENT THAN -9 (IS VALID AND SWTICHING BETWEEN DIFFERENT GROUPS)
                            CASE WHEN PREV_COLOR_FLG = 0 THEN 1
                                    WHEN PREV_COLOR_FLG = 1 THEN 0
                                    ELSE 99 -- ADDED AS A CHECK POINT
        					END

                    WHEN PREV_GROUP_CODE != GROUP_CODE THEN -- IF CURRENT GROUP_CODE IS DIFFERENT FROM PREVIOS GROUP_CODE
                            CASE WHEN PREV_COLOR_FLG = 0 THEN 1
                                    WHEN PREV_COLOR_FLG = 1 THEN 0
                                    ELSE 98 -- ADDED AS A CHECK POINT
                            END
                    
        			WHEN PREV_GROUP_CODE IN (-9,0) AND GROUP_CODE IN (-9,0) THEN -- IF BOTH GROUP_CODES ARE INVALID (NULL) AND CUSTOMER CHANGE CONDITION. (CUSTOMERS ARE ALWAYS DIFFERENT FOR EVERY ROW)
                            CASE WHEN PREV_COLOR_FLG = 0 THEN 1
                                    WHEN PREV_COLOR_FLG = 1 THEN 0
                                    ELSE 97 -- ADDED AS A CHECK POINT
                            END

                    ELSE 96 -- ADDED AS A CHECK POINT
                END AS NEW_COLOR
        FROM
            (
            SELECT REPORT_DATE
                    ,REPORT_ORDER_NUM
                    ,GROUP_CODE
                    ,CUSTOMER_NUM                  
                    ,LAG(REPORT_ORDER_NUM,1) OVER (PARTITION BY REPORT_DATE ORDER BY REPORT_ORDER_NUM) AS PREV_REPORT_ORDER_NUM
                    ,LEAD(GROUP_CODE,1) OVER (PARTITION BY REPORT_DATE ORDER BY REPORT_ORDER_NUM) AS NEXT_GROUP_CODE
                    ,LAG(GROUP_CODE,1) OVER (PARTITION BY REPORT_DATE ORDER BY REPORT_ORDER_NUM) AS PREV_GROUP_CODE
                    ,LEAD(CUSTOMER_NUM,1) OVER (PARTITION BY REPORT_DATE ORDER BY REPORT_ORDER_NUM) AS NEXT_CUSTOMER_NUM
                    ,LAG(CUSTOMER_NUM,1) OVER (PARTITION BY REPORT_DATE ORDER BY REPORT_ORDER_NUM) AS PREV_CUSTOMER_NUM
                    ,COLOR_FLG
                    ,LAG(COLOR_FLG,1) OVER (PARTITION BY REPORT_DATE ORDER BY REPORT_ORDER_NUM) AS PREV_COLOR_FLG
            FROM COLOR_TABLE
            WHERE 1=1
                AND REPORT_DATE = TO_DATE('31032023','DDMMYYYY')
            ) B

        WHERE A.REPORT_DATE = B.REPORT_DATE
            AND A.REPORT_ORDER_NUM = B.REPORT_ORDER_NUM
        );

        COMMIT;
    END LOOP;
	
	DBMS_OUTPUT.PUT_LINE('PROCESS COMPLETED');
END;
/
